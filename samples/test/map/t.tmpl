{% include "header.tmpl" %}
<script>
var d = {
	id:'dm_id',
	url:"{{absurl(request,'./dm.dspy')}}",
};

eval(tmplRender('echarts',d));
var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';
var convertData = function(item, tolist, locations) {
    var res = [];
    for (var i = 0; i < tolist.length; i++) {
        var dataItem = data[i];
        var fromCoord = locations[item];
        var toCoord = locations[tolist[i][0]];
        if (fromCoord && toCoord) {
            res.push({
                fromName: item,
                toName: tolist[i][0],
                coords: [fromCoord, toCoord]
            });
        }
    }
    return res;
};
obj_dm_id.getValue = function(params) {
    var series = obj_dm_id.obj.getOption().series;
    var data = {
        event: params.event,
        data: {
            undefined: series[params.seriesIndex].xdata[params.dataIndex]
        }
    };
    data.data[series[params.seriesIndex].indicator] = series[params.seriesIndex].data[params.dataIndex];
    return data;
};
obj_dm_id.setDataOption = function(data) {
    obj_dm_id.data = data;
    var series = [];
    var ldata = []
    for (var item in data.data) {
        ldata.push(item);
        series.push({
            name: item,
            type: 'lines',
            coordinateSystem: 'bmap',
            zlevel: 1,
            effect: {
                show: true,
                period: 6,
                trailLength: 0.7,
                color: '#fff',
                symbolSize: 3
            },
            lineStyle: {
                normal: {
                    color: color[i],
                    width: 0,
                    curveness: 0.2
                }
            },
            data: convertData(item, data.data[item], data.location)
        },
        {
            name: item,
            type: 'lines',
            coordinateSystem: 'bmap',
            zlevel: 2,
            effect: {
                show: true,
                period: 6,
                trailLength: 0,
                symbol: planePath,
                symbolSize: 15
            },
            lineStyle: {
                normal: {
                    color: color[i],
                    width: 1,
                    opacity: 0.4,
                    curveness: 0.2
                }
            },
            data: convertData(item, data.data[item], data.location)
        },
        {
            name: item,
            type: 'effectScatter',
            coordinateSystem: 'bmap',
            zlevel: 2,
            rippleEffect: {
                brushType: 'stroke'
            },
            label: {
                normal: {
                    show: true,
                    position: 'right',
                    formatter: '{b}'
                }
            },
            symbolSize: function(val) {
                return val[2] / 8;
            },
            itemStyle: {
                normal: {
                    color: color[i]
                }
            },
            data: data.data[item].map(function(dataItem) {
                return {
                    name: dataItem[0],
                    value: data.location[dataItem[0]].concat([dataItem[1]])
                };
            })
        });
    }
    var opts = {
        bmap: {
            center: [104.114129, 37.550339],
            zoom: 5
        },
        series: series,
        legend: {
            orient: 'vertical',
            top: 'bottom',
            left: 'right',
            data: ldata,
            selectedMode: 'single'
        }
    };
    return opts;
};
obj_dm_id.setValue({});
</script>
{% include "footer.tmpl" %}