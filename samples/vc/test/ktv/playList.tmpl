<div id="playlist_tb" width="100%">
<div width="100%">
<button id="pc_power" onclick="power()">电源</button>
<span width="10px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_pause" onclick="play_or_pause()" >暂停</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_mute" onclick="volume_mute()">静音</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_track" onclick="swich_track()" >伴唱</button>
</div>
<div width="100%" height="6px">&nbsp</div>
<div width="100%">
<button id="pc_next" onclick="play_next()">切歌</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_replay" onclick="play_replay()">重唱</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_volumedec" onclick="volume_dec()">音量-</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_volumeinc" onclick="volume_inc()" >音量+</button>
</div>
<div width="100%" height="6px">&nbsp</div>

<div width="100%">
<button id="pc_backpage" onclick="backPLPage()">上页</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_delete" onclick="deleteSong()">删除</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_toTop" onclick="toTopSong()">置顶</button>
<span width="5px">&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp&nbsp</span>
<button id="pc_forwardpage" onclick="forwardPLPage()" >下页</button>
</div>
</div>
<div id="playlist_container" class="container100"></div>
<script>
var rows = 9;
var playlist_page = 1;
var backPLPage = function(){
	if(playlist_page<=1){
		return;
	}
	playlist_page = playlist_page - 1;
	$('#playlist').datagrid('gotoPage',playlist_page);
	console.log('playlist.tmpl,backPage()',playlist_page);
};

var forwardPLPage = function(){
	var total = $('#playlist').datagrid('getData').total;
	var max=total/rows;
	if (playlist_page >= max){
		return;
	}
	playlist_page = playlist_page + 1;
	$('#playlist').datagrid('gotoPage',{page:playlist_page,callback:function(page){console.log(page)}});
	console.log('playlist.tmpl,forwardPage()',playlist_page);
}

var deleteSong=function(){
	var row = $('#playlist').datagrid('getSelected');
	if (isNull(row)){
		var options = {  
			title: "操作提示",  
			msg: "select a row first ！",  
			showType: 'slide',  
			timeout: 5000  
		};  
		$.messager.show(options);
		return
	}
	$.post('deleteSong.dspy',row,function(s){
		if (s.status=='OK'){
			var options = {  
				title: "操作提示",  
				msg: "成功！",  
				showType: 'slide',  
				timeout: 5000  
			};  
			$.messager.show(options);
			$('#playlist').datagrid('reload');
		} else {
			var options = {  
				title: "操作提示",  
				msg: "失败",  
				showType: 'slide',  
				timeout: 5000  
			};  
			$.messager.show(options);
		}
	},'json');
};

var toTopSong=function(){
	var row = $('#playlist').datagrid('getSelected');
	if (isNull(row)){
		var options = {  
			title: "操作提示",  
			msg: "select a row first ！",  
			showType: 'slide',  
			timeout: 5000  
		};  
		$.messager.show(options);
		return
	}
	$.post('toTopSong.dspy',row,function(s){
		if (s.status=='OK'){
			var options = {  
				title: "操作提示",  
				msg: "成功！",  
				showType: 'slide',  
				timeout: 5000  
			};  
			$.messager.show(options);
			$('#playlist').datagrid('reload');
		} else {
			var options = {  
				title: "操作提示",  
				msg: "失败",  
				showType: 'slide',  
				timeout: 5000  
			};  
			$.messager.show(options);
		}
	},'json');
};

var buttonStatus = function(power_status){
	if (power_status=='stoped'){
		document.getElementById("pc_next").disabled=true;
		document.getElementById("pc_replay").disabled=true;
		document.getElementById("pc_mute").disabled=true;
		document.getElementById("pc_track").disabled=true;
		document.getElementById("pc_pause").disabled=true;
		document.getElementById("pc_volumedec").disabled=true;
		document.getElementById("pc_volumeinc").disabled=true;
	} else {
		document.getElementById("pc_next").disabled=false;
		document.getElementById("pc_replay").disabled=false;
		document.getElementById("pc_mute").disabled=false;
		document.getElementById("pc_track").disabled=false;
		document.getElementById("pc_pause").disabled=false;
		document.getElementById("pc_volumedec").disabled=false;
		document.getElementById("pc_volumeinc").disabled=false;
	}
}
var power = function(){
	remoteCall('./playcontrol/powerOnOrOff.dspy','POST','json',{},function(d){
			if(d.status=='OK')
			{
				buttonStatus(d.status);
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};

var play_next=function(){
	remoteCall('./playcontrol/playNext.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};

var play_replay=function(){
	remoteCall('./playcontrol/replay.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};

var swich_track=function(){
	remoteCall('./playcontrol/toggleTrack.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};
var play_or_pause=function(){
	remoteCall('./playcontrol/togglePause.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};
var volume_dec=function(){
	remoteCall('./playcontrol/volumeDown.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};

var volume_inc=function(){
	remoteCall('./playcontrol/volumeUp.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};

var volume_mute=function(){
	remoteCall('./playcontrol/toggleMute.dspy','POST','json',{},function(d){
			if (d.status=='OK')
			{
			} else 
			{
				showError(d);
			}
		},
		showError
	);
};
var sd = {
	"id":"playlist",
	"title":"播放列表",
	"url":"playlist.dspy",
	"idField":"songid",
	"fields":[
		{
			"name":"songid",
			"iotype":"text",
			"label":"grage",
			"hidden":true,
			"opps":"f"
		},
		{
			"name":"singer",
			"iotype":"text",
			"label":"{{i18n('singer')}}",
			"opps":"f"
		},
		{
			"name":"songname",
			"iotype":"text",
			"label":"{{i18n('songname')}}",
			"width":180,
			"opps":"f"
		},
		{
			"name":"userid",
			"iotype":"text",
			"label":"{{i18n('user')}}",
			"width":50,
			"opps":"f"
		}
	],
	"options":{
		"toolbar":'#playlist_tb',
		"pagination":false,		
		"queryParams":{"rows":rows,"page":function(){return playlist_page;}},
		"pageSize":50,
		"rownumbers":false,
	}
};

$(tmplRender('datagrid',sd)).appendTo($('#playlist_container'));
$(function(){
	timer = function(){
		var ds = $('#playlist').datagrid('getRows');
		if (isNull(ds)){
			return;
		}
		var row = ds[0];
		if (!isNull(ds[0])){
			$.post('checkChange.dspy',row,function(s){
				if (s.status=='OK'){
					$('#playlist').datagrid('reload');
				} 
			},'json');			
		} 
	}
	$.parser.parse($('#playlist_container'));
	setInterval("timer()",10000);
});
buttonStatus('{{player.playStatus}}');

</script>




