#datetree.dspy
@runSQLIterator
def years(dbname,ns,callback=None):
	desc={
		"sql_string":"""
		select distinct year_value from datedimension where odate<=${today}$
		order by year_value
		"""
	}
	return desc
	
def yearconv(pt,pid,r):
	return {
		"id":"year_value:%s" % r.year_value,
		"type":"year_value",
		"value":r.year_value,
		"text":r.year_value,
		"iconCls":"icon-dimension",
		"state":"closed",
		"pid":None,
		"pt":None
	}

	
@runSQLIterator
def months(dbname,ns,callback=None):
	desc={
		"sql_string":"""
		select distinct month_value,month_id from datedimension
		where year_value = ${year_value}$
		"""
	}
	return desc

def monthconv(pt,pid,r):
	return {
		"id":"month_id:" + r.month_id,
		"type":"month_id",
		"value":r.month_id,
		"text":r.month_value+'æœˆ',
		"iconCls":"icon-dimension",
		"state":"closed",
		"nodetype":"month",
		"pid":pid,
		"ptype":pt
	}
	
@runSQLIterator
def days(dbname,ns,callback=None):
	desc={
		"sql_string":"""
		select distinct odate from datedimension
		where month_id = ${month_id}$
		"""
	}
	return desc

def dayconv(pt,pid,r):
	return {
		"id":"odate:" + r.odate,
		"type":"odate",
		"value":r.odate,
		"text":r.odate,
		"iconCls":"icon-dimension",
		"state":None,
		"nodetype":"day",
		"pid":pid,
		"ptype":pt
	}
	

ns = request2ns()
id = ns.get('id')
print('args=',ns)
r = curDatetime()
today = '%04d-%02d-%02d' % (r.year,r.month,r.day)
if id is None:
	return [
		{
			"id":"total:" + 'total',
			"text":'total',
			"iconCls":"icon-dimension",
			"state":'closed',
			"nodetype":"total",
			"pid":None,
			"ptype":None
		}
	]

ids = id.split(':')
if ids[0]=='total':
	_years = await years('cfae',{'today':today})
	return [ yearconv(None,None,r) for r in _years ]
if ids[0]=='year_value':
	_months = await months('cfae',{'month_id':ids[1]})
	return [ monthconv(ids[0],ids[1],r) for r in _months ]
if ids[0]=='month_id':
	_days = days('cfae',{'month_id':ids[1]})
	return [ dayconv(ids[0],ids[1],r) for r in _days ]
print('id','not found')
	
